heat_template_version: 2013-05-23

description: |
  This is a Heat template to deploy Load Balanced Drupal servers with a
  backend database server.

parameter_groups:

- label: Server Settings
  parameters:
  - image

- label: Web Server Settings
  parameters:
  - master_server_flavor
  - web_server_count
  - web_server_flavor

- label: Database Settings
  parameters:
  - database_server_flavor

- label: Drupal Settings
  parameters:
  - domain
  - username

- label: rax-dev-params
  # These are parameters that will not be displayed in the portal. The purpose
  # of these parameters are for users who are developing or testing newer or
  # different setups. If any of these parameters are changed, there is a good
  # chance this stack will fail to properly deploy.
  parameters:
  - kitchen
  - chef_version
  - child_template
  - version
  - load_balancer_hostname
  - web_server_hostnames
  - master_server_hostname
  - database_server_hostname

parameters:

  # Server settings
  load_balancer_hostname:
    label: Load Balancer Hostname
    description: Hostname for the Cloud Load Balancer
    type: string
    default: Drupal-Load-Balancer
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  database_server_hostname:
    label: Server Name
    description: Hostname to use for your Drupal Database Server
    type: string
    default: Drupal-Database
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  master_server_hostname:
    label: Server Name
    description: Hostname to use for your Drupal web-master server.
    type: string
    default: Drupal-Master
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  web_server_hostnames:
    label: Server Name
    description: Hostname to use for all additional Drupal web nodes
    type: string
    default: Drupal-Web%index%
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9%-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  web_server_count:
    label: Web Server Count
    description: Number of web servers to deploy in addition to the web-master
    type: number
    default: 1
    constraints:
    - range:
        min: 0
        max: 7
      description: Must be between 0 and 7 servers.

  image:
    label: Operating System
    description: |
      Required: Server image used for all servers that are created as a part of
      this deployment.
    type: string
    default: Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
    constraints:
    - allowed_values:
      - Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)
      - Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)
      - Debian 7 (Wheezy) (PVHVM)
      - CentOS 6 (PVHVM)
      - Red Hat Enterprise Linux 6 (PVHVM)
      description: Must be a supported operating system.

  database_server_flavor:
    label: Server Size
    description: |
      Cloud Server size to use for the database server. Sizes refer to the
      amount of RAM allocated to the server.
    type: string
    default: 4 GB General Purpose v1
    constraints:
    - allowed_values:
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  master_server_flavor:
    label: Master Server Size
    description: |
      Cloud Server size to use for the web-master node. The size should be at
      least one size larger than what you use for the web nodes. This server
      handles all admin calls and will ensure files are synced across all
      other nodes.
    type: string
    default: 2 GB General Purpose v1
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  web_server_flavor:
    label: Node Server Size
    description: |
      Cloud Server size to use on all of the additional web nodes.
    type: string
    default: 2 GB General Purpose v1
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  # Drupal settings
  domain:
    label: Site Domain
    description: Domain to be used with this Drupal site
    type: string
    default: "example.com"
    constraints:
    - allowed_pattern: "^[a-zA-Z0-9.-]{1,255}.[a-zA-Z]{2,15}$"
      description: Must be a valid domain name

  version:
    label: Drupal Version
    description: Version of Drupal to install
    type: string
    default: "7.32"
    constraints:
    - allowed_values:
      - "7.32"

  # Database and system user configuration
  database_name:
    label: Database Name
    description: Drupal database name
    type: string
    default: drupal
    constraints:
    - allowed_pattern: "^[0-9a-zA-Z$_]{1,64}$"
      description: |
        Maximum length of 64 characters, may only contain letters, numbers, and
        underscores.

  username:
    label: Username
    description: "Username for the Drupal admin login"
    type: string
    default: admin
    constraints:
    - allowed_pattern: "^(.){1,16}$"
      description: |
        Must be shorter than 16 characters, this is due to MySQL's maximum
        username length.

  ## The below parameters are for development purposes. Use the default
  ## settings for these parameters when attempting to deploy this stack.
  # Chef configuration options
  kitchen:
    label: Kitchen
    description: |
      URL for the kitchen to use, fetched using git
    type: string
    default: https://github.com/rackspace-orchestration-templates/drupal-multi

  chef_version:
    label: Chef Version
    description: Version of chef client to use
    type: string
    default: 11.16.4

  child_template:
    label: Child Template
    description: |
      Location of the child template to use for the Drupal web servers
    type: string
    default: https://raw.githubusercontent.com/rackspace-orchestration-templates/drupal-multi/master/drupal-web-server.yaml

resources:
  # Random password generation
  database_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  mysql_root_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  mysql_repl_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  mysql_debian_password:
    type: "OS::Heat::RandomString"
    properties:
      length: 16
      sequence: lettersdigits

  # SSH KEYS
  sync_key:
    type: "OS::Nova::KeyPair"
    properties:
      name:
        str_replace:
          template: "%stack_id%-sync"
          params:
            "%stack_id%": { get_param: "OS::stack_id" }
      save_private_key: true

  ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  # Server resources
  load_balancer:
    type: "Rackspace::Cloud::LoadBalancer"
    depends_on:
    - master_server_setup
    - web_servers
    properties:
      name: { get_param: load_balancer_hostname }
      nodes:
      - addresses: [ { get_attr: [master_server, privateIPv4] } ]
        port: 80
        condition: ENABLED
      - addresses: { get_attr: [web_servers, privateIPv4] }
        port: 80
        condition: ENABLED
      healthMonitor:
        type: HTTP
        delay: 10
        timeout: 5
        attemptsBeforeDeactivation: 2
        path: /
        statusRegex: ^[23]0[0-2]$
      port: 80
      protocol: HTTP
      algorithm: ROUND_ROBIN
      contentCaching: ENABLED
      virtualIps:
      - type: PUBLIC
        ipVersion: IPV4
      metadata:
        rax-heat: { get_param: "OS::stack_id" }

  database_server:
    type: "Rackspace::Cloud::Server"
    properties:
      name: { get_param: database_server_hostname }
      flavor: { get_param: database_server_flavor }
      image: { get_param: image }
      key_name: { get_resource: ssh_key }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }

  master_server:
    type: "Rackspace::Cloud::Server"
    properties:
      name: { get_param: master_server_hostname }
      flavor: { get_param: master_server_flavor }
      image: { get_param: image }
      key_name: { get_resource: ssh_key }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }

  web_servers:
    type: "OS::Heat::ResourceGroup"
    properties:
      count: { get_param: web_server_count }
      resource_def:
        type: { get_param: child_template }
        properties:
          server_hostname: { get_param: web_server_hostnames }
          image: { get_param: image }
          flavor: { get_param: web_server_flavor }
          domain: { get_param: domain }
          drupal_dir:
            str_replace:
              template: "/var/www/vhosts/%domain%"
              params:
                "%domain%": { get_param: domain }
          # ssl_private_key: { get_param: ssl_private_key }
          # ssl_certificate: { get_param: ssl_certificate }
          # ssl_intermediate_certs: { get_param: ssl_intermediate_certs }
          lsync_pub: { get_attr: [sync_key, public_key]}
          ssh_keypair_name: { get_resource: ssh_key }
          ssh_private_key: { get_attr: [ssh_key, private_key] }
          kitchen: { get_param: kitchen }
          version: { get_param: version }
          chef_version: { get_param: chef_version }
          parent_stack_id: { get_param: "OS::stack_id" }
          varnish_master_backend: { get_attr: [master_server, privateIPv4] }

  # Chef resources
  database_server_setup:
    type: "OS::Heat::ChefSolo"
    depends_on: database_server
    properties:
      username: root
      private_key: { get_attr: [ssh_key, private_key] }
      host: { get_attr: [database_server, accessIPv4] }
      kitchen: { get_param: kitchen }
      chef_version: { get_param: chef_version }
      node:
        drupal:
          db:
            name: { get_param: database_name }
            user: { get_param: username }
            pass: { get_attr: [database_password, value] }
            host: { get_attr: [database_server, privateIPv4] }
        hollandbackup:
          main:
            backup_directory: "/var/lib/mysqlbackup"
            mysqldump:
              user: "root"
              host: "localhost"
              password: { get_attr: [mysql_root_password, value] }
        mysql:
          server_root_password: { get_attr: [mysql_root_password, value] }
          server_repl_password: { get_attr: [mysql_repl_password, value] }
          server_debian_password: { get_attr: [mysql_debian_password, value] }
          remove_test_database: true
          remove_anonymous_users: true
          root_network_acl: ['10.%']
        rax:
          mysql:
            innodb_buffer_pool_mempercent: 0.6
        run_list: ["recipe[apt]",
                   "recipe[mysql::server]",
                   "recipe[dotmy-cnf]",
                   "recipe[hollandbackup]",
                   "recipe[hollandbackup::mysqldump]",
                   "recipe[hollandbackup::main]",
                   "recipe[hollandbackup::backupsets]",
                   "recipe[hollandbackup::cron]",
                   "recipe[rax-drupal::firewall-mysql]"]

  master_server_setup:
    type: "OS::Heat::ChefSolo"
    depends_on:
    - database_server_setup
    - web_servers
    properties:
      username: root
      private_key: { get_attr: [ssh_key, private_key] }
      host: { get_attr: [master_server, accessIPv4] }
      kitchen: { get_param: kitchen }
      chef_version: { get_param: chef_version }
      node:
        apache:
          listen_ports: [8080]
          timeout: 30
          serversignature: "Off"
          traceenable: "Off"
        varnish:
          listen_port: "80"
          version: "3.0"
        lsyncd:
          interval: 5
        sysctl:
          values:
            fs.inotify.max_user_watches: 1000000
        drupal:
          server_name: { get_param: domain }
          server_alias: { get_param: domain }
          apache:
            port: "8080"
          version: { get_param: version }
          dir:
            str_replace:
              template: "/var/www/vhosts/%domain%"
              params:
                "%domain%": { get_param: domain }
          db:
            name: { get_param: database_name }
            user: { get_param: username }
            pass: { get_attr: [database_password, value] }
            host: { get_attr: [database_server, privateIPv4] }
          site:
            admin: { get_param: username }
            pass: { get_attr: [database_password, value] }
            host: '10.%'
        mysql:
          server_root_password: { get_attr: [mysql_root_password, value] }
        rax:
          apache:
            domain: { get_param: domain }
          varnish:
            backend_host: "localhost"
          firewall:
            tcp: [80]
          lsyncd:
            ssh:
              private_key: { get_attr: [sync_key, private_key] }
            clients: { get_attr: [web_servers, privateIPv4] }
        run_list: ["recipe[apt]",
                   "recipe[rax-drupal-dir]",
                   "recipe[rax-drupal::masterpredrupal]",
                   "recipe[drupal]",
                   "recipe[rax-drupal::mastersetup]",
                   "recipe[rax-drupal::user]",
                   "recipe[rax-drupal::lsyncd]",
                   "recipe[rax-drupal::apachepostsetup]",
                   "recipe[varnish::repo]",
                   "recipe[varnish]",
                   "recipe[rax-drupal::varnish]",
                   "recipe[rax-drupal::varnish-firewall]",
                   "recipe[sysctl::attribute_driver]",
                   "recipe[rax-firewall]"]

outputs:
  private_key:
    value: { get_attr: [ssh_key, private_key] }
    description: SSH Private IP

  load_balancer_ip:
    value: { get_attr: [load_balancer, PublicIp] }
    description: Load Balancer IP

  drupal_url:
    description: Drupal URL
    value:
      str_replace:
        template: "http://%ip%"
        params:
          "%ip%": { get_attr: [load_balancer, PublicIp] }

  drupal_user:
    value: { get_param: username }
    description: Drupal User

  drupal_password:
    value: { get_attr: [database_password, value] }
    description: Drupal Password

  database_server_ip:
    value: { get_attr: [database_server, accessIPv4] }
    description: Database Server IP

  web_master_ip:
    value: { get_attr: [master_server, accessIPv4] }
    description: Web-Master IP

  web_ips:
    value: { get_attr: [web_servers, accessIPv4] }
    description: Web Server IPs

  mysql_root_password:
    value: { get_attr: [mysql_root_password, value] }
    description: MySQL Root Password
